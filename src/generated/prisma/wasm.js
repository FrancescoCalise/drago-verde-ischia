
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AppUserScalarFieldEnum = {
  id: 'id',
  username: 'username',
  password: 'password',
  name: 'name',
  surname: 'surname',
  birthdate: 'birthdate',
  email: 'email',
  role: 'role',
  phone_number: 'phone_number',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.GdrSessionScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  urlImg: 'urlImg',
  start: 'start',
  end: 'end',
  master: 'master',
  availableSeats: 'availableSeats',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.GdrSessionRegistrationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  sessionId: 'sessionId',
  createdAt: 'createdAt'
};

exports.Prisma.MainEventScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  urlImg: 'urlImg',
  start: 'start',
  end: 'end',
  location: 'location',
  price: 'price',
  maxSeats: 'maxSeats',
  created_at: 'created_at',
  updated_at: 'updated_at',
  note: 'note'
};

exports.Prisma.MainEventRegistrationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  eventId: 'eventId',
  createdAt: 'createdAt'
};

exports.Prisma.LoggerIDMLScalarFieldEnum = {
  id: 'id',
  IDML: 'IDML',
  description: 'description',
  language: 'language',
  created_at: 'created_at'
};

exports.Prisma.NewsArticleScalarFieldEnum = {
  id: 'id',
  title: 'title',
  content: 'content',
  imageUrl: 'imageUrl',
  publishedAt: 'publishedAt',
  shares: 'shares',
  authorId: 'authorId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.NewsLikeScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  articleId: 'articleId',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  AppUser: 'AppUser',
  GdrSession: 'GdrSession',
  GdrSessionRegistration: 'GdrSessionRegistration',
  MainEvent: 'MainEvent',
  MainEventRegistration: 'MainEventRegistration',
  LoggerIDML: 'LoggerIDML',
  NewsArticle: 'NewsArticle',
  NewsLike: 'NewsLike'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\FrancescoCalise\\Desktop\\myProject\\drago-verde-ischia\\src\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\FrancescoCalise\\Desktop\\myProject\\drago-verde-ischia\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "../../../.env",
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider  = \"postgresql\"\n  url       = env(\"DATABASE_URL\")\n  directUrl = env(\"DIRECT_URL\")\n}\n\nmodel AppUser {\n  id           String    @id @default(uuid()) @db.Uuid\n  username     String    @unique\n  password     String\n  name         String\n  surname      String\n  birthdate    DateTime  @db.Date\n  email        String    @unique\n  role         String?   @default(\"guest\")\n  phone_number String?\n  created_at   DateTime? @default(now()) @db.Timestamptz(6)\n  updated_at   DateTime? @default(now()) @db.Timestamptz(6)\n\n  // Relazioni\n  newsArticles            NewsArticle[]\n  GdrSessionRegistrations GdrSessionRegistration[]\n  mainEventRegistrations  MainEventRegistration[]\n}\n\nmodel GdrSession {\n  id             String    @id @default(uuid()) @db.Uuid\n  title          String\n  description    String\n  urlImg         String?\n  start          DateTime\n  end            DateTime\n  master         String\n  availableSeats Int\n  created_at     DateTime? @default(now()) @db.Timestamptz(6)\n  updated_at     DateTime? @default(now()) @db.Timestamptz(6)\n\n  gdrSessionRegistrations GdrSessionRegistration[]\n}\n\nmodel GdrSessionRegistration {\n  id        String   @id @default(uuid()) @db.Uuid\n  userId    String   @db.Uuid\n  sessionId String   @db.Uuid\n  createdAt DateTime @default(now())\n\n  user    AppUser    @relation(fields: [userId], references: [id])\n  session GdrSession @relation(fields: [sessionId], references: [id])\n\n  @@unique([userId, sessionId])\n}\n\nmodel MainEvent {\n  id          String    @id @default(uuid()) @db.Uuid\n  title       String\n  description String\n  urlImg      String?\n  start       DateTime\n  end         DateTime\n  location    String\n  price       Float     @default(0)\n  maxSeats    Int\n  created_at  DateTime? @default(now()) @db.Timestamptz(6)\n  updated_at  DateTime? @default(now()) @db.Timestamptz(6)\n  note        String\n\n  mainEventRegistrations MainEventRegistration[]\n}\n\nmodel MainEventRegistration {\n  id        String   @id @default(uuid()) @db.Uuid\n  userId    String   @db.Uuid\n  eventId   String   @db.Uuid\n  createdAt DateTime @default(now())\n\n  user  AppUser   @relation(fields: [userId], references: [id])\n  event MainEvent @relation(fields: [eventId], references: [id])\n\n  @@unique([userId, eventId])\n}\n\nmodel LoggerIDML {\n  id          String    @id @default(uuid())\n  IDML        String\n  description String\n  language    String\n  created_at  DateTime? @default(now()) @db.Timestamptz(6)\n\n  @@unique([IDML, language])\n}\n\nmodel NewsArticle {\n  id          String   @id @default(uuid()) @db.Uuid\n  title       String\n  content     String   @db.Text\n  imageUrl    String?\n  publishedAt DateTime @default(now())\n\n  likes  NewsLike[]\n  shares Int        @default(0)\n\n  authorId String  @db.Uuid\n  author   AppUser @relation(fields: [authorId], references: [id])\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel NewsLike {\n  id        String   @id @default(uuid()) @db.Uuid\n  userId    String   @db.Uuid\n  articleId String   @db.Uuid\n  createdAt DateTime @default(now())\n\n  article NewsArticle @relation(fields: [articleId], references: [id])\n\n  @@unique([userId, articleId])\n}\n",
  "inlineSchemaHash": "83cac23bbcb4592d834c12fd3231025fda5a5ef2e2bcc6bbef60510307fd370e",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"AppUser\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"surname\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"birthdate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone_number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"newsArticles\",\"kind\":\"object\",\"type\":\"NewsArticle\",\"relationName\":\"AppUserToNewsArticle\"},{\"name\":\"GdrSessionRegistrations\",\"kind\":\"object\",\"type\":\"GdrSessionRegistration\",\"relationName\":\"AppUserToGdrSessionRegistration\"},{\"name\":\"mainEventRegistrations\",\"kind\":\"object\",\"type\":\"MainEventRegistration\",\"relationName\":\"AppUserToMainEventRegistration\"}],\"dbName\":null},\"GdrSession\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"urlImg\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"start\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"end\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"master\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"availableSeats\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"gdrSessionRegistrations\",\"kind\":\"object\",\"type\":\"GdrSessionRegistration\",\"relationName\":\"GdrSessionToGdrSessionRegistration\"}],\"dbName\":null},\"GdrSessionRegistration\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"AppUser\",\"relationName\":\"AppUserToGdrSessionRegistration\"},{\"name\":\"session\",\"kind\":\"object\",\"type\":\"GdrSession\",\"relationName\":\"GdrSessionToGdrSessionRegistration\"}],\"dbName\":null},\"MainEvent\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"urlImg\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"start\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"end\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"maxSeats\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"note\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mainEventRegistrations\",\"kind\":\"object\",\"type\":\"MainEventRegistration\",\"relationName\":\"MainEventToMainEventRegistration\"}],\"dbName\":null},\"MainEventRegistration\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eventId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"AppUser\",\"relationName\":\"AppUserToMainEventRegistration\"},{\"name\":\"event\",\"kind\":\"object\",\"type\":\"MainEvent\",\"relationName\":\"MainEventToMainEventRegistration\"}],\"dbName\":null},\"LoggerIDML\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"IDML\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"language\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"NewsArticle\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"publishedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"likes\",\"kind\":\"object\",\"type\":\"NewsLike\",\"relationName\":\"NewsArticleToNewsLike\"},{\"name\":\"shares\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"authorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"author\",\"kind\":\"object\",\"type\":\"AppUser\",\"relationName\":\"AppUserToNewsArticle\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"NewsLike\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"articleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"article\",\"kind\":\"object\",\"type\":\"NewsArticle\",\"relationName\":\"NewsArticleToNewsLike\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

